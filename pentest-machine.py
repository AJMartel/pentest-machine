#!/usr/bin/python

from libnmap.parser import NmapParser
import argparse
import subprocess
import os
import trollius
from trollius import From, Return
from trollius.subprocess import PIPE, STDOUT
from functools import partial
from contextlib import closing

'''
http: nikto, httpscreenshot? get comments? spider? fast, high risk arachni scan?
smb: enum4linux?
ftp: Anonymous? brute?
mssql: brute sa? Do I want login bruteforcing?
smtp: smtp-open-relay + smtp-enum-users
snmp: bruteforce the string
'''

def parse_args():
    # Create the arguments
    parser = argparse.ArgumentParser()
    parser.add_argument("-f", "--nmapfile", help="Nmap XML file to parse")
    return parser.parse_args()


@trollius.coroutine
def main(arguments, report):
    procs = []
    for host in report.hosts:
        if host.is_up():
            print 'Host: {0} {1}'.format(host.address, host.hostnames)

        # Get services
        for s in host.services:
            print 'Service: {0}/{1} {2} {3}'.format(s.port, s.protocol, s.state, s.service)
            ip_port = host.address + ':' + str(s.port)
            if s.service == 'http':
                proc = yield From(trollius.create_subprocess_exec('/usr/bin/nikto', '-h', ip_port, stdout=PIPE, stderr=STDOUT))
                procs.append(proc)

    yield From(get_output(procs))

@trollius.coroutine
def get_output(nikto_procs):
    for p in nikto_procs:
        stdout = yield From(p.communicate())
        for line in stdout:
            if line:
                print line.rstrip()

@trollius.coroutine
def create_process(*args):
    print 'started'
    proc = yield From(trollius.create_subprocess_exec(*args, stdout=PIPE, stderr=STDOUT))
    stdout = yield From(proc.communicate())

if __name__ == "__main__":
    args = parse_args()
    report = NmapParser.parse_fromfile(args.nmapfile)
    loop = trollius.get_event_loop()
    loop.run_until_complete(main(args,report))
